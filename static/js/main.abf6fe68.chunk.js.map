{"version":3,"sources":["components/result.tsx","components/results.tsx","components/resultsHeader.tsx","search.svg","components/search.tsx","lib/lib.ts","loading.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Result","date","tweet","index","id","user","name","screen_name","img_url","profile_image_url","text","created_at","className","oddEven","draggable","onDragStart","ev","dataTransfer","setData","JSON","stringify","src","alt","isMatch","matchAll","culprits","popMatch","matchFn","res","value","push","item","done","next","lastCulprit","length","lastSrcIndex","lastCheckedIndex","reactElements","forEach","idx","itemLen","before","substring","beforeRE","React","createElement","key","culpritRE","after","afterRE","mentionDetector","format","Date","Results","tweets","allowDrop","handleSave","onDragOver","preventDefault","onDrop","getData","parse","map","ResultsHeader","Search","handleTextChange","term","handleSearch","placeholder","type","onKeyUp","onClick","searchIcon","width","height","LS","data","localStorage","setItem","empty","getItem","App","useState","setTerm","setTweets","saved","setSaved","savedLog","setSavedLog","savedSearchTerm","setSavedSearchTerm","loading","setLoading","a","fetch","then","response","json","statuses","useEffect","lib","lsSaved","lsSavedLog","isNotInLog","hasOwnProperty","String","e","target","code","loadingIcon","filter","includes","newSaved","newSavedLog","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abf6fe68.chunk.js","sourcesContent":["\n// @ts-nocheck\nimport React from \"react\";\nimport {  format } from 'date-fns'\nimport { ITweet } from \"../interfaces\";\n\nfunction Result({ tweet , index}: { tweet: ITweet, index: number }) {\n    const formatDate = (date: string) => format(new Date(date), 'd MMM yyyy')\n    function mentionDetector(src: string) {\n        const regx = /(@\\w+)/gi\n        const isMatch = src.matchAll(regx)\n        const culprits = []\n        function popMatch(matchFn: Function) {\n            const res: any = matchFn()\n            if (res.value) culprits.push({ item: res.value[0], index: res.value['index'] })\n            if (!res.done) popMatch(matchFn)\n        }\n        popMatch(() => isMatch.next())\n        const lastCulprit = culprits.length - 1\n        const lastSrcIndex = src.length - 1\n        let lastCheckedIndex = 0\n        const reactElements = []\n        culprits.forEach(function ({ item, index }, idx) {\n            const itemLen = item.length\n            let before = ''\n            if (index > 0) {\n                before = src.substring(lastCheckedIndex, index)\n                const beforeRE = React.createElement('span', { key: `before-${index}-${idx}` }, before);\n                const culpritRE = React.createElement('span', { key: `culprit-${index}-${idx}`, className: 'culprit' }, item);\n                reactElements.push(beforeRE)\n                reactElements.push(culpritRE)\n                lastCheckedIndex = index + itemLen\n            } else {\n                const culpritRE = React.createElement('span', { key: `culprit-${index}-${idx}`, className: 'culprit' }, item);\n                reactElements.push(culpritRE)\n                lastCheckedIndex = itemLen\n            }\n\n            if (idx === lastCulprit) {\n                const after = src.substring(lastCheckedIndex, lastSrcIndex)\n                const afterRE = React.createElement('span', { key: `after-${index}-${idx}` }, after);\n                reactElements.push(afterRE)\n            }\n\n        })\n\n        return reactElements.length ? reactElements : src\n\n    }\n    const { id, user: { name, screen_name, profile_image_url: img_url }, text, created_at,  } = tweet\n    const oddEven = (index: number) => index % 2 === 0 ? 'even' : 'odd'\n    return <li\n        key={id}\n        className={`result row ${oddEven( index )}`}\n        draggable=\"true\"\n        onDragStart={(ev: any) => {\n            ev.dataTransfer.setData('tweet', JSON.stringify(tweet))\n            // debugger\n        }}\n\n    >\n        <div className=\"avatar-container col-2\">\n            <img src={img_url} alt=\"\" />\n\n        </div>\n        <div className=\"details col-8 row\">\n            <h5 className=\"col-12\">{name} {<span className=\"handle\">@{screen_name}</span>}</h5>\n            <p className=\"tweet col-12\">{mentionDetector(text)}</p>\n        </div>\n        <div className=\"date col-2\">{formatDate(created_at)}</div>\n    </li>\n}\n\nexport default Result","import React from \"react\";\nimport Result from \"./result\";\nimport { ITweet } from \"../interfaces\";\n\ninterface IResults {\n    tweets: ITweet[], \n    allowDrop: boolean\n    handleSave?: Function\n}\nfunction Results({ tweets, allowDrop, handleSave = ()=>{} }: IResults) {\n    return (\n        <ul className=\"results\" \n        onDragOver={(ev)=> ev.preventDefault()}\n        onDrop={\n            (ev)=> {\n                const tweet = ev.dataTransfer.getData('tweet')\n                if( allowDrop ) handleSave( JSON.parse(tweet) )\n            }\n        }\n            >\n            {tweets.map((tweet: ITweet, index) => {\n                return <Result key={tweet.id} tweet={tweet} index={index} />\n            })}\n        </ul>\n    )\n}\n\nexport default Results","import React from 'react';\n\n// interface IResultsHeaderProps {}\n\nfunction ResultsHeader() {\n  return (\n    <div className=\"result-header col-12\">\n  </div>\n  );\n}\n\nexport default ResultsHeader;\n","export default __webpack_public_path__ + \"static/media/search.9f032220.svg\";","import React from 'react';\nimport searchIcon from '../search.svg'\n\ninterface ISearchProps {\n    handleTextChange(e: any): any,\n    handleSearch(term: string): any,\n    term: string,\n    placeholder: string\n}\n\nfunction Search({ handleTextChange, term, handleSearch, placeholder }: ISearchProps) {\n    return (\n        <div className=\"search-container col-12\">\n            <input\n                type=\"text\"\n                placeholder={placeholder}\n                onKeyUp={handleTextChange}\n                name=\"search-tweet-api\" id=\"\"\n                className=\" search col-11\"\n            />\n            <button className=\"search-btn btn col-1\" onClick={() => term !== '' ? handleSearch(term) : null}>\n                <img className=\"search-icon\" src={searchIcon} alt=\"search icon\" width=\"30px\" height=\"30px\" />\n            </button>\n        </div>\n    );\n}\n\nexport default Search;\n","export const LS = {\n    getKey: function( obj:{}, exclude: string[] ){\n        return Object.keys( obj).filter( key => !exclude.includes(key))[0]\n    },\n    set: function(key:string, data: any){\n        localStorage.setItem(key, JSON.stringify(data))\n    },\n    get: (key: string, empty: string) => {\n     return JSON.parse(localStorage.getItem(key) || empty)\n    }\n        \n}\n\n","export default __webpack_public_path__ + \"static/media/loading.0b37f007.svg\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Results from './components/results';\nimport ResultsHeader from './components/resultsHeader';\nimport Search from './components/search'\nimport dummyData from './dummyData';\nimport { ITweet } from './interfaces'\nimport * as lib from './lib/lib'\nimport loadingIcon from './loading.svg'\n\nfunction App() {\n  const [term, setTerm] = useState('')\n  const [tweets, setTweets] = useState<ITweet[]>([])\n  const [saved, setSaved] = useState<ITweet[]>([])\n  const [savedLog, setSavedLog] = useState({})\n  const [savedSearchTerm, setSavedSearchTerm] = useState('')\n  const [loading, setLoading] = useState(false)\n\n\n  useEffect(() => {\n    (async function () {\n      const lsSaved: ITweet[] = await lib.LS.get('saved', \"[]\")\n      const lsSavedLog: {} = await lib.LS.get('savedLog', \"{}\")\n      if (lsSaved) setSaved(lsSaved)\n      if (lsSavedLog) setSavedLog(lsSavedLog)\n    }())\n  }, [])\n\n\n  async function handleSearch(term: string) {\n    // const { statuses }: any = dummyData\n    setLoading(true)\n    fetch(`https://secret-dusk-30723.herokuapp.com/tweet?query=${term}`)\n      .then(response => response.json())\n      .then(statuses => {\n        setLoading(false)\n        setTweets(statuses)\n      })\n  }\n\n  const isNotInLog = (id: number) => !savedLog.hasOwnProperty(String(id))\n\n  const handleTextChange = (e: any) => {\n    const { target: { value }, code } = e\n    setTerm(value)\n    if (value !== '' && code === 'Enter') handleSearch(term)\n    if (value === '') setTweets([])\n  }\n  const handleSavedTextChange = (e: any) => {\n    const { target: { value } } = e\n    setSavedSearchTerm(value)\n  }\n\n  const handleSave = (tweet: ITweet) => {\n    if (isNotInLog(tweet.id)) {\n      const newSaved = [tweet, ...saved]\n      const newSavedLog = {\n        [String(tweet.id)]: tweet.id,\n        ...savedLog\n      }\n      lib.LS.set('saved', newSaved)\n      lib.LS.set('savedLog', newSavedLog)\n      setSaved(newSaved)\n      setSavedLog(newSavedLog)\n    }\n  }\n\n  return (\n    <div className=\"App container\">\n      <header className=\"App-header row\">\n        <h1>Tweet Saver</h1>\n      </header>\n      <div className=\"tweet-list-container row\">\n\n        <div className=\"search-tweets col-12 col-lg-6\">\n          {/* search */}\n          <Search\n            handleTextChange={handleTextChange}\n            term={term}\n            handleSearch={handleSearch}\n            placeholder=\"search twitter tweets\"\n          />\n          {/* results */}\n          <div className=\"results-container\">\n            <ResultsHeader />\n            { loading && <img className=\"loading-icon\" src={loadingIcon} alt=\"loading icon\" width=\"30px\" height=\"30px\" />}\n            <Results key=\"search\" tweets={tweets.filter(({ id }) => isNotInLog(id))} allowDrop={false} />\n          </div>\n        </div>\n\n        <div className=\"saved-tweets col-12 col-lg-6\">\n          <Search\n            handleTextChange={handleSavedTextChange}\n            term={term}\n            handleSearch={() => { }}\n            placeholder=\"search saved tweets\"\n          />\n          <div className=\"results-container\">\n            <ResultsHeader />\n            <Results\n              key=\"saved\"\n              tweets={\n                saved\n                  .filter((tweet) => {\n                    if (savedSearchTerm === '') return true\n                    const { user: { name, screen_name }, text } = tweet\n                    return name.includes(savedSearchTerm) ||\n                      screen_name.includes(savedSearchTerm) ||\n                      text.includes(savedSearchTerm)\n                  })\n              }\n              allowDrop={true}\n              handleSave={handleSave}\n            />\n            {/* search  \n                delete\n          */}\n            {/* saved */}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}